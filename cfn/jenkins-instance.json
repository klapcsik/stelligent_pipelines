{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Dromedary demo - jenkins",

    "Parameters" : {
        "Ec2Key": {
            "Type": "String",
            "Description": "Ec2 key for ssh access"
        },
        "SubnetId": {
            "Type": "String",
            "Description": "VPC subnet id in which to place jenkins"
        },
        "SecurityGroupId": {
            "Type": "String",
            "Description": "Security-group id in which to place jenkins"
        },
        "InstanceProfile": {
            "Type": "String",
            "Description": "Instance profile for jenkins instance"
        }
    },

    "Mappings": {
        "RegionConfig": {
            "us-east-1": {
                "ami": "ami-db55e4b0"
            },
            "us-west-2": {
                "ami": ""
            }
        }
    },

    "Resources": {

        "JenkinsInstance": {
            "Type": "AWS::EC2::Instance",

            "Properties": {
                "ImageId": { "Fn::FindInMap": [ "RegionConfig", { "Ref": "AWS::Region" }, "ami" ]},
                "InstanceType": "t2.large",
                "IamInstanceProfile": { "Ref": "InstanceProfile" },
                "KeyName": { "Ref": "Ec2Key" },
                "Tags": [{ "Key": "Application", "Value": { "Ref": "AWS::StackId" } },
                         { "Key": "Name", "Value": "DromedaryJenkins" }],
                "NetworkInterfaces": [{
                    "GroupSet": [{ "Ref": "SecurityGroupId" }],
                    "AssociatePublicIpAddress": "true",
                    "DeviceIndex": "0",
                    "DeleteOnTermination": "true",
                    "SubnetId": { "Ref": "SubnetId" }
                }],
                "UserData": { "Fn::Base64": { "Fn::Join": [ "", [
                    "#!/bin/bash -xe\n",
                    "yum update -y aws-cfn-bootstrap\n",
                    "yum -y update\n",
                    "\n",
                    "if [ \"$(/usr/local/bin/node --version 2>/dev/null)\" != 'v0.12.7' ]; then\n",
                    "  yum remove nodejs npm\n",
                    "  wget https://nodejs.org/dist/v0.12.7/node-v0.12.7-linux-x64.tar.gz -O /tmp/node-install.tar.gz\n",
                    "  cd /usr/local && tar --strip-components 1 -xzf /tmp/node-install.tar.gz\n",
                    "fi\n",
                    "if [ ! -e /usr/bin/node ]; then\n",
                    "  ln -s /usr/local/bin/node /usr/bin/node\n",
                    "fi\n",
                    "if [ ! -e /usr/bin/npm ]; then\n",
                    "  ln -s /usr/local/bin/npm /usr/bin/npm\n",
                    "fi\n",
                    "node -v \n",
                    "npm -v\n",
                    "npm install -g gulp\n",
                    "service jenkins stop\n",
                    "service jenkins start\n",
                    "\n",
                    "/opt/aws/bin/cfn-signal -e $? ",
                        " --stack ", { "Ref": "AWS::StackName" },
                        " --resource JenkinsInstance ",
                        " --region ", { "Ref": "AWS::Region" }, "\n"
                ]]}}
            },
            "CreationPolicy": {
                "ResourceSignal": { "Timeout": "PT15M" }
            }
        }
    },

    "Outputs": {
        "PublicDns": {
            "Description": "Public DNS of Jenkins instance",
            "Value": { "Fn::GetAtt": [ "JenkinsInstance", "PublicIp" ]}
        }
    }
}
