{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"Creates Lambda functions which enable the lookup of 'upstream' Stack Outputs and Resources from within a 'downstream' CloudFormation template (without having to use code external to the template) ",
   "Resources":{
      "iamMFAFunction": {
         "Type": "AWS::Lambda::Function",
         "Properties": {
            "Handler": "iam-user-mfa.handler",
            "Role": { "Fn::GetAtt" : ["lambdaExecutionRole", "Arn"] },
            "Code": {
               "S3Bucket": {"Fn::Join":["", ["dromedary-", {"Ref":"AWS::AccountId"}]]},
               "S3Key": "lambda/config-rules.zip"
            },
            "Runtime": "nodejs",
            "Timeout": "5"
         }
      },
      "ec2SecGrpCidrIngressFunction": {
         "Type": "AWS::Lambda::Function",
         "Properties": {
            "Handler": "ec2-secgrp-cidr-ingress.handler",
            "Role": { "Fn::GetAtt" : ["lambdaExecutionRole", "Arn"] },
            "Code": {
               "S3Bucket": {"Fn::Join":["", ["dromedary-", {"Ref":"AWS::AccountId"}]]},
               "S3Key": "lambda/config-rules.zip"
            },
            "Runtime": "nodejs",
            "Timeout": "5"
         }
      },
      "ec2SecGrpCidrEgressFunction": {
         "Type": "AWS::Lambda::Function",
         "Properties": {
            "Handler": "ec2-secgrp-cidr-egress.handler",
            "Role": { "Fn::GetAtt" : ["lambdaExecutionRole", "Arn"] },
            "Code": {
               "S3Bucket": {"Fn::Join":["", ["dromedary-", {"Ref":"AWS::AccountId"}]]},
               "S3Key": "lambda/config-rules.zip"
            },
            "Runtime": "nodejs",
            "Timeout": "5"
         }
      },
      "ec2VPCRule":{
         "Type":"AWS::Config::ConfigRule",
         "Properties":{
            "ConfigRuleName":"ConSec-EC2-VPC-Rule",
            "Scope":{
               "ComplianceResourceTypes":[
               ]
            },
            "Source":{
               "Owner":"AWS",
               "SourceDetails":[],
               "SourceIdentifier":"INSTANCES_IN_VPC"
            }
         }
      },
      "ec2SSHRule":{
         "Type":"AWS::Config::ConfigRule",
         "Properties":{
            "ConfigRuleName":"ConSec-EC2-SSH-Rule",
            "Scope":{
               "ComplianceResourceTypes":[
               ]
            },
            "Source":{
               "Owner":"AWS",
               "SourceDetails":[],
               "SourceIdentifier":"INCOMING_SSH_DISABLED"
            }
         }
      },
      "ec2EncryptionRule":{
         "Type":"AWS::Config::ConfigRule",
         "Properties":{
            "ConfigRuleName":"ConSec-EC2-Encryption-Rule",
            "Scope":{
               "ComplianceResourceTypes":[
               ]
            },
            "Source":{
               "Owner":"AWS",
               "SourceDetails":[],
               "SourceIdentifier":"ENCRYPTED_VOLUMES"
            }
         }
      },
      "iamMFARule":{
         "Type":"AWS::Config::ConfigRule",
         "Properties":{
            "ConfigRuleName":"ConSec-IAM-MFA-Rule",
            "Scope":{
               "ComplianceResourceTypes":[
                  "AWS::IAM::User"
               ]
            },
            "Source":{
               "Owner":"CUSTOM_LAMBDA",
               "SourceDetails":[
                  {
                     "EventSource":"aws.config",
                     "MessageType":"ConfigurationItemChangeNotification"
                  }
               ],
               "SourceIdentifier":{
                  "Fn::GetAtt":[
                     "iamMFAFunction",
                     "Arn"
                  ]
               }
            }
         },
         "DependsOn":"iamMFAPerm"
      },
      "ec2SecGrpCidrIngressRule":{
         "Type":"AWS::Config::ConfigRule",
         "Properties":{
            "ConfigRuleName":"ConSec-EC2-SecGrp-Cidr-Ingress-Rule",
            "Scope":{
               "ComplianceResourceTypes":[
                  "AWS::EC2::SecurityGroup"
               ]
            },
            "Source":{
               "Owner":"CUSTOM_LAMBDA",
               "SourceDetails":[
                  {
                     "EventSource":"aws.config",
                     "MessageType":"ConfigurationItemChangeNotification"
                  }
               ],
               "SourceIdentifier":{
                  "Fn::GetAtt":[
                     "ec2SecGrpCidrIngressFunction",
                     "Arn"
                  ]
               }
            }
         },
         "DependsOn":"ec2SecGrpCidrIngressPerm"
      },
      "ec2SecGrpCidrEgressRule":{
         "Type":"AWS::Config::ConfigRule",
         "Properties":{
            "ConfigRuleName":"ConSec-EC2-SecGrp-Cidr-Egress-Rule",
            "Scope":{
               "ComplianceResourceTypes":[
                  "AWS::EC2::SecurityGroup"
               ]
            },
            "Source":{
               "Owner":"CUSTOM_LAMBDA",
               "SourceDetails":[
                  {
                     "EventSource":"aws.config",
                     "MessageType":"ConfigurationItemChangeNotification"
                  }
               ],
               "SourceIdentifier":{
                  "Fn::GetAtt":[
                     "ec2SecGrpCidrEgressFunction",
                     "Arn"
                  ]
               }
            }
         },
         "DependsOn":"ec2SecGrpCidrEgressPerm"
      },
      "iamMFAPerm":{
         "Type":"AWS::Lambda::Permission",
         "Properties":{
            "FunctionName":{
               "Fn::GetAtt":[
                  "iamMFAFunction",
                  "Arn"
               ]
            },
            "Action":"lambda:InvokeFunction",
            "Principal":"config.amazonaws.com"
         }
      },
      "ec2SecGrpCidrIngressPerm":{
         "Type":"AWS::Lambda::Permission",
         "Properties":{
            "FunctionName":{
               "Fn::GetAtt":[
                  "ec2SecGrpCidrIngressFunction",
                  "Arn"
               ]
            },
            "Action":"lambda:InvokeFunction",
            "Principal":"config.amazonaws.com"
         }
      },
      "ec2SecGrpCidrEgressPerm":{
         "Type":"AWS::Lambda::Permission",
         "Properties":{
            "FunctionName":{
               "Fn::GetAtt":[
                  "ec2SecGrpCidrEgressFunction",
                  "Arn"
               ]
            },
            "Action":"lambda:InvokeFunction",
            "Principal":"config.amazonaws.com"
         }
      },
      "lambdaExecutionRole":{
         "Type":"AWS::IAM::Role",
         "Properties":{
            "AssumeRolePolicyDocument":{
               "Statement":[
                  {
                     "Action":[
                        "sts:AssumeRole"
                     ],
                     "Effect":"Allow",
                     "Principal":{
                        "Service":[
                           "lambda.amazonaws.com"
                        ]
                     }
                  }
               ],
               "Version":"2012-10-17"
            },
            "Path":"/",
            "Policies":[
               {
                  "PolicyDocument":{
                     "Statement":[
                        {
                           "Action":[
                              "iam:List*",
                              "iam:Get*",
                              "ec2:Describe*"
                           ],
                           "Effect":"Allow",
                           "Resource":"*"
                        },
                        {
                           "Action":[
                              "config:*"
                           ],
                           "Effect":"Allow",
                           "Resource":"*"
                        }
                     ],
                     "Version":"2012-10-17"
                  },
                  "PolicyName":"root"
               }
            ]
         }
      }
   },
   "Outputs":{
     "StackName":{
       "Value":{
         "Ref":"AWS::StackName"
       }
     }
   }
}
