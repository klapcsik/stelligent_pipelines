{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Stelligent CloudFormation Template for launching Jenkins on an EC2 instance ** This template creates one or more Amazon resources. You will be billed for the AWS resources used if you create a stack from this template.",
  "Parameters": {
    "Ec2Key": {
      "Type": "String",
      "Description": "Ec2 key for ssh access",
      "Default": ""
    },
    "SubnetId": {
      "Type": "String",
      "Description": "VPC subnet id in which to place jenkins"
    },
    "VPC": {
      "Type": "String",
      "Description": "VPC ID in which to place Jenkins"
    },
    "CfnInitRole": {
      "Type": "String",
      "Description": "IAM Role for cfn-init"
    },
    "InstanceProfile": {
      "Type": "String",
      "Description": "Instance profile for jenkins instance"
    },
    "S3Bucket": {
      "Type": "String",
      "Description": "Artifact Bucket"
    },
    "JobConfigsTarball": {
      "Type": "String",
      "Description": "Path to config tarball in S3Bucket"
    },
    "SshCidr": {
      "Type": "String",
      "Description": "Whitelisted network CIDR for inbound SSH",
      "Default": "0.0.0.0/0"
    }
  },
  "Mappings": {
    "RegionConfig": {
      "us-east-1": {
        "ami": "ami-dcc2b3b6"
      }
    }
  },
  "Conditions": {
    "NoEc2Key": {
      "Fn::Equals": [
        {
          "Ref": "Ec2Key"
        },
        ""
      ]
    }
  },
  "Resources": {
    "JenkinsSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "No ingress by default",
        "SecurityGroupEgress": [
          {
            "CidrIp": "70.138.67.94/32",
            "FromPort": "-1",
            "IpProtocol": "tcp",
            "ToPort": "-1"
          }
        ]
      }
    },
    "JenkinsInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "RegionConfig",
            {
              "Ref": "AWS::Region"
            },
            "ami"
          ]
        },
        "InstanceType": "m4.large",
        "IamInstanceProfile": {
          "Ref": "InstanceProfile"
        },
        "KeyName": {
          "Fn::If": [
            "NoEc2Key",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "Ref": "Ec2Key"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeleteOnTermination": "true",
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "JenkinsSecurityGroup"
              }
            ],
            "SubnetId": {
              "Ref": "SubnetId"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "yum update -y aws-cfn-bootstrap\n",
                "yum -y upgrade\n",
                "\n",
                "service jenkins stop\n",
                "/opt/aws/bin/cfn-init -v",
                " --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                " --resource JenkinsInstance ",
                " --role ",
                {
                  "Ref": "CfnInitRole"
                },
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "\n",
                "service jenkins start\n",
                "node -v \n",
                "npm -v\n",
                "pip install behave python-owasp-zap-v2.4 boto3\n",
                "\n",
                "/opt/aws/bin/cfn-signal -e $? ",
                " --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                " --resource JenkinsInstance ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT15M"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "commands": {
              "00-extract-configs": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "cd /var/lib/jenkins/jobs/;",
                      "tar xzf /tmp/job-configs.tgz;",
                      "chown -R jenkins:jenkins .;"
                    ]
                  ]
                }
              },
              "01-set-publicip-jenkins-config": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4);",
                      "sed -e \"s/%PUBLICIP%/$PUBLIC_IP/g\" -i /var/lib/jenkins/jenkins.model.JenkinsLocationConfiguration.xml"
                    ]
                  ]
                }
              },
              "10-install-node": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "yum remove -y nodejs npm\n",
                      "\n",
                      "cd /usr/local && tar --strip-components 1 -xzf /tmp/node-install.tar.gz\n",
                      "if [ ! -e /usr/bin/node ]; then\n",
                      "  ln -s /usr/local/bin/node /usr/bin/node\n",
                      "fi\n",
                      "if [ ! -e /usr/bin/npm ]; then\n",
                      "  ln -s /usr/local/bin/npm /usr/bin/npm\n",
                      "fi\n"
                    ]
                  ]
                },
                "test": "test \"$(/usr/local/bin/node --version 2>/dev/null)\" != 'v0.12.7'"
              },
              "15-install-node-modules": {
                "command": "npm install -g gulp"
              },
              "20-install-jq": {
                "command": "yum install -y jq"
              }
            },
            "files": {
              "/tmp/job-configs.tgz": {
                "authentication": "S3AccessCreds",
                "group": "root",
                "mode": "000644",
                "owner": "root",
                "source": {
                  "Fn::Join": [
                    "",
                    [
                      "https://s3.amazonaws.com/",
                      {
                        "Ref": "S3Bucket"
                      },
                      "/",
                      {
                        "Ref": "JobConfigsTarball"
                      }
                    ]
                  ]
                }
              },
              "/tmp/node-install.tar.gz": {
                "group": "root",
                "mode": "000644",
                "owner": "root",
                "source": "https://nodejs.org/dist/v0.12.7/node-v0.12.7-linux-x64.tar.gz"
              },
              "/var/lib/jenkins/jenkins.model.JenkinsLocationConfiguration.xml": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "<?xml version='1.0' encoding='UTF-8'?>",
                      "<jenkins.model.JenkinsLocationConfiguration>",
                      "<adminAddress>address not configured yet &lt;nobody@nowhere&gt;</adminAddress>",
                      "<jenkinsUrl>http://%PUBLICIP%:8080/</jenkinsUrl>",
                      "</jenkins.model.JenkinsLocationConfiguration>"
                    ]
                  ]
                },
                "group": "jenkins",
                "mode": "000644",
                "owner": "jenkins"
              }
            }
          },
          "packages": {
            "python": {
              "behave": [

              ],
              "python-owasp-zap-v2.4": [

              ]
            }
          }
        }
      }
    }
  },
  "Outputs": {
    "StackName": {
      "Value": {
        "Ref": "AWS::StackName"
      }
    },
    "PublicDns": {
      "Value": {
        "Fn::GetAtt": [
          "JenkinsInstance",
          "PublicIp"
        ]
      },
      "Description": "Public DNS of Jenkins instance"
    },
    "JenkinsURL": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "JenkinsInstance",
                "PublicIp"
              ]
            },
            ":8080/"
          ]
        ]
      },
      "Description": "Jenkins URL"
    },
    "SecurityGroup": {
      "Value": {
        "Fn::GetAtt": [
          "JenkinsSecurityGroup",
          "GroupId"
        ]
      },
      "Description": "Jenkins Security Group"
    }
  }
}
